@page "/addproduct"

@inject NavigationManager navigationManager
@inject UseCases.IAddProductUseCase addproductUseCase
@inject UseCases.IGetCategoryByIdUseCase getCategoryByIdUseCase
@inject UseCases.IViewCategoriesUseCase viewCategoriesUseCase

<h3>Agregar Poducto</h3>

@if (product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Nombre</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="category">Categoria</label>
            <select id="category" @bind="product.CategoryId" class="form-control">
                <option selected></option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.CategoryId">@cat.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="price">Precio</label>
            <InputNumber id="price" @bind-Value="product.Price" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="quantity">Cantidad</label>
            <InputNumber id="quantity" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>

        <button type="submit" class="btn btn-primary">Guardar</button>
        <button type="submit" class="btn btn-primary" onclick="OnCancel">Cancelar</button>
    </EditForm>

}


@code {
    private Product product;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        product = new Product();
        categories = viewCategoriesUseCase.Execute();
    }

    private void OnValidSubmit()
    {
        addproductUseCase.Execute(product);
        navigationManager.NavigateTo("/products");
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("/products");
    }
}
