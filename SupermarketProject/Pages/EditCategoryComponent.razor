@page "/editcategory/{categoryId}"

@inject NavigationManager navigationManager
@inject UseCases.IEditCategoryUseCase editCategoryUseCase
@inject UseCases.IGetCategoryByIdUseCase getCategoryByIdUseCase

<h3>Editar Categoria</h3>

@if (category != null)
{
    <EditForm Model="category" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="category.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <InputText id="description" @bind-Value="category.Description" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Guardar</button>
        <button type="button" class="btn btn-primary" onclick="OnCancel">Cancel</button>
    </EditForm>

}


@code {
    [Parameter]
    public string CategoryId { get; set; }

    private Category category;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        category = new Category();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if(int.TryParse(this.CategoryId, out int iCategoryId))
        category = getCategoryByIdUseCase.Execute(iCategoryId);
    }

    private void OnValidSubmit()
    {
        editCategoryUseCase.Execute(this.category);
        navigationManager.NavigateTo("/categories");
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("/categories");
    }
}
